// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = "prisma://accelerate.prisma-data.net/?api_key=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhcGlfa2V5IjoiODQ2ZTdmZWMtMTRiMi00NmFlLWJhNmYtZDdiMTg1NGU3YTcwIiwidGVuYW50X2lkIjoiOWQ5MDM4NTAwMTU2YjY0YWU0YWQxZDYwMjhjYzE2ZjkzNmEwOWJhZGVkMWUyMjA1Y2FkMGVjZDkyMTFjOWI5MCIsImludGVybmFsX3NlY3JldCI6ImNhY2E0NjE3LTQ2YjItNGI1ZS1iNDI2LThjOGRhNTQ2NzZhYSJ9.XFKfH9Of3cWBKoJapJ86ekdTEep3mM77vi8o5wt4sK4"
  directUrl = "postgresql://buyppy_ps_user:19kfH8gEOuhN0cYyhZ4ZyoFfFDNEoVc4@dpg-cqbhsdqju9rs7391lflg-a.oregon-postgres.render.com/buyppy_ps"
}

model User {
  id       String @id @default(uuid())
  email    String
  password String
  name     String

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  @@map("users")
}

model Client {
  id        String  @id @default(uuid())
  document  String
  phone     String
  email     String  @unique
  name      String
  addressId String  @unique @map("address_id")
  address   Address @relation(fields: [addressId], references: [id])
  orders    Order[]

  observations String

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  @@map("clients")
}

model Address {
  id      String  @id @default(uuid())
  street  String
  number  Int
  zipCode String  @map("zip_code")
  client  Client?
  city    String  @default("")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  @@map("address")
}

model Coupon {
  id                 String   @id @default(uuid())
  code               String   @unique
  discountPercentage Float    @map("discount_percentage")
  expirationDate     DateTime @map("expiration_date")
  usageLimit         Int      @map("usage_limit")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  @@map("coupons")
}

model Product {
  id               String             @id @default(uuid())
  name             String
  code             String             @unique
  cost             Float
  price            Float
  promotionalPrice Float?             @map("promotional_price")
  category         String
  inventories      Inventory[]
  attributes       ProductAttribute[]
  orderItems       OrderItem[]

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  @@map("products")
}

model ProductAttribute {
  id        String  @id @default(uuid())
  productId String  @map("product_id")
  key       String
  value     String
  product   Product @relation(fields: [productId], references: [id])

  createdAt DateTime @default(now()) @map("created_at")

  @@map("product_attributes")
}

model Inventory {
  id        String  @id @default(uuid())
  productId String  @map("product_id")
  quantity  Int
  location  String?

  product Product @relation(fields: [productId], references: [id])

  createdAt DateTime @default(now()) @map("created_at")

  @@map("inventories")
}

model Order {
  id       String      @id @default(uuid())
  clientId String      @map("client_id")
  client   Client      @relation(fields: [clientId], references: [id])
  status   String
  total    Float
  items    OrderItem[]

  refundedAt   DateTime? @map("refunded_at")
  refundReason String?   @map("refund_reason")

  canceledAt   DateTime? @map("canceled_at")
  cancelReason String?   @map("cancel_reason")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  @@map("orders")
}

model OrderItem {
  id        String  @id @default(uuid())
  orderId   String  @map("order_id")
  order     Order   @relation(fields: [orderId], references: [id])
  productId String  @map("product_id")
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int
  price     Float

  createdAt DateTime @default(now()) @map("created_at")

  @@map("order_items")
}
